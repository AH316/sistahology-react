import{u as f,s as i,a as u,c as o}from"./index-D25BPhhY.js";let a=null;async function p(){const e=f.setState;console.debug("auth:start - beginning auth bootstrap (production)"),e({isLoading:!0});try{const{data:{session:t},error:l}=await i.auth.getSession();if(l)throw l;if(t?.user){const r=await u.getCurrentUser();if(r?.profile){const s=o.profile(r.profile,r);e({user:s,profile:r.profile,isAuthenticated:!0,error:null})}else e({user:null,profile:null,isAuthenticated:!1,error:null})}else e({user:null,profile:null,isAuthenticated:!1,error:null})}catch(t){e({user:null,profile:null,isAuthenticated:!1,error:t instanceof Error?t.message:String(t)})}finally{e({isLoading:!1,isReady:!0}),console.debug("auth:ready - auth bootstrap completed (production)")}if(!a){const{data:{subscription:t}}=i.auth.onAuthStateChange(async(l,r)=>{if(r?.user){const s=await u.getCurrentUser();if(s?.profile){const n=o.profile(s.profile,s);e({user:n,profile:s.profile,isAuthenticated:!0,isLoading:!1,error:null})}else e({user:null,profile:null,isAuthenticated:!1,isLoading:!1,error:null})}else e({user:null,profile:null,isAuthenticated:!1,isLoading:!1,error:null})});a=()=>t?.unsubscribe()}}export{p as initAuthProd};
